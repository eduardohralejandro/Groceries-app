{"ast":null,"code":"var _jsxFileName = \"/Users/eduardo/Desktop/newprojectGroceriesapp/Groceries-app/src/components/AddItems/AddItems.js\";\nimport React, { Fragment, Component } from \"react\";\nimport styles from \"./addItems.module.scss\";\n\nclass AddItems extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      itemTitle: \"\",\n      items: [],\n      messageError: \"\",\n      checkbox: false,\n      clickOutside: false\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.addItems = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            itemTitle = _this$state.itemTitle,\n            checkbox = _this$state.checkbox;\n      const newElement = {\n        itemTitle,\n        checkbox,\n        person: \"\",\n        price: \"\",\n        month: \"\"\n      };\n\n      if (!itemTitle) {\n        this.setState({\n          messageError: \"You can not save empty information\"\n        });\n        return;\n      } else {\n        this.setState(prevState => ({\n          items: [...prevState.items, newElement],\n          messageError: \"\"\n        }));\n      }\n    };\n\n    this.deleteItem = (_, ID) => {\n      const items = this.state.items;\n      this.setState({\n        items: items.filter((_, keyItem) => {\n          return ID !== keyItem;\n        })\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const shoppingLists = this.props.shoppingLists;\n\n    if (shoppingLists !== prevProps.shoppingLists) {\n      this.setState({\n        items: [],\n        messageError: \"\"\n      });\n    } else if (prevState.messageError !== this.state.messageError) {\n      this.setState({\n        messageError: \"\"\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          showInputs = _this$props.showInputs,\n          saveShoppingList = _this$props.saveShoppingList;\n    const _this$state2 = this.state,\n          items = _this$state2.items,\n          messageError = _this$state2.messageError;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      styles: styles.messageError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, messageError), showInputs ? React.createElement(\"div\", {\n      className: styles.inputsContainer,\n      ref: this.divRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: styles.btnsaveShoppingList,\n      onMouseDown: () => {\n        return saveShoppingList(items);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Save list\"), React.createElement(\"input\", {\n      className: styles.inputCreateLists,\n      autoFocus: true,\n      placeholder: \"Add group title\",\n      type: \"text\",\n      name: \"groupTitle\",\n      onChange: e => this.props.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: styles.formAddItems,\n      onSubmit: e => this.addItems(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: styles.addBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"+\"), React.createElement(\"input\", {\n      placeholder: \"Add item\",\n      name: \"itemTitle\",\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.itemsList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, items.map((element, key) => {\n      return React.createElement(\"div\", {\n        className: styles.newItemContainer,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, element.itemTitle), React.createElement(\"div\", {\n        className: styles.binDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"deleteItem\",\n        className: styles.bin,\n        onClick: e => this.deleteItem(e, key),\n        src: \"https://svgshare.com/i/FSv.svg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })));\n    })))) : null);\n  }\n\n}\n\nexport default AddItems;","map":{"version":3,"sources":["/Users/eduardo/Desktop/newprojectGroceriesapp/Groceries-app/src/components/AddItems/AddItems.js"],"names":["React","Fragment","Component","styles","AddItems","state","itemTitle","items","messageError","checkbox","clickOutside","handleChange","e","setState","target","name","value","addItems","preventDefault","newElement","person","price","month","prevState","deleteItem","_","ID","filter","keyItem","componentDidUpdate","prevProps","shoppingLists","props","render","showInputs","saveShoppingList","inputsContainer","divRef","btnsaveShoppingList","inputCreateLists","formAddItems","addBtn","itemsList","map","element","key","newItemContainer","binDiv","bin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AACA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC9BG,KAD8B,GACtB;AACLC,MAAAA,SAAS,EAAE,EADN;AAELC,MAAAA,KAAK,EAAE,EAFF;AAGLC,MAAAA,YAAY,EAAE,EAHT;AAILC,MAAAA,QAAQ,EAAE,KAJL;AAKLC,MAAAA,YAAY,EAAE;AALT,KADsB;;AAAA,SAQ9BC,YAR8B,GAQfC,CAAC,IAAI;AACjB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAAd;AACF,KAV6B;;AAAA,SAqB9BC,QArB8B,GAqBnBL,CAAC,IAAI;AACbA,MAAAA,CAAC,CAACM,cAAF;AADa,0BAEmB,KAAKb,KAFxB;AAAA,YAELC,SAFK,eAELA,SAFK;AAAA,YAEMG,QAFN,eAEMA,QAFN;AAGb,YAAMU,UAAU,GAAG;AAChBb,QAAAA,SADgB;AAEhBG,QAAAA,QAFgB;AAGhBW,QAAAA,MAAM,EAAE,EAHQ;AAIhBC,QAAAA,KAAK,EAAE,EAJS;AAKhBC,QAAAA,KAAK,EAAE;AALS,OAAnB;;AAQA,UAAI,CAAChB,SAAL,EAAgB;AACb,aAAKO,QAAL,CAAc;AAAEL,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACA;AACF,OAHD,MAGO;AACJ,aAAKK,QAAL,CAAcU,SAAS,KAAK;AACzBhB,UAAAA,KAAK,EAAE,CAAC,GAAGgB,SAAS,CAAChB,KAAd,EAAqBY,UAArB,CADkB;AAEzBX,UAAAA,YAAY,EAAE;AAFW,SAAL,CAAvB;AAIF;AACH,KAzC6B;;AAAA,SA2C9BgB,UA3C8B,GA2CjB,CAACC,CAAD,EAAIC,EAAJ,KAAW;AAAA,YACbnB,KADa,GACH,KAAKF,KADF,CACbE,KADa;AAErB,WAAKM,QAAL,CAAc;AACXN,QAAAA,KAAK,EAAEA,KAAK,CAACoB,MAAN,CAAa,CAACF,CAAD,EAAIG,OAAJ,KAAgB;AACjC,iBAAOF,EAAE,KAAKE,OAAd;AACF,SAFM;AADI,OAAd;AAKF,KAlD6B;AAAA;;AAY9BC,EAAAA,kBAAkB,CAACC,SAAD,EAAYP,SAAZ,EAAuB;AAAA,UAC9BQ,aAD8B,GACZ,KAAKC,KADO,CAC9BD,aAD8B;;AAEtC,QAAIA,aAAa,KAAKD,SAAS,CAACC,aAAhC,EAA+C;AAC5C,WAAKlB,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,YAAY,EAAE;AAA3B,OAAd;AACF,KAFD,MAEO,IAAIe,SAAS,CAACf,YAAV,KAA2B,KAAKH,KAAL,CAAWG,YAA1C,EAAwD;AAC5D,WAAKK,QAAL,CAAc;AAAEL,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACF;AACH;;AAiCDyB,EAAAA,MAAM,GAAG;AAAA,wBACmC,KAAKD,KADxC;AAAA,UACEE,UADF,eACEA,UADF;AAAA,UACcC,gBADd,eACcA,gBADd;AAAA,yBAE0B,KAAK9B,KAF/B;AAAA,UAEEE,KAFF,gBAEEA,KAFF;AAAA,UAESC,YAFT,gBAESA,YAFT;AAGN,WACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAG,MAAA,MAAM,EAAEL,MAAM,CAACK,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCA,YAAjC,CADH,EAEI0B,UAAU,GACR;AAAK,MAAA,SAAS,EAAE/B,MAAM,CAACiC,eAAvB;AAAwC,MAAA,GAAG,EAAE,KAAKC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AACG,MAAA,SAAS,EAAElC,MAAM,CAACmC,mBADrB;AAEG,MAAA,WAAW,EAAE,MAAM;AAChB,eAAOH,gBAAgB,CAAC5B,KAAD,CAAvB;AACF,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADH,EASG;AACG,MAAA,SAAS,EAAEJ,MAAM,CAACoC,gBADrB;AAEG,MAAA,SAAS,EAAE,IAFd;AAGG,MAAA,WAAW,EAAC,iBAHf;AAIG,MAAA,IAAI,EAAC,MAJR;AAKG,MAAA,IAAI,EAAC,YALR;AAMG,MAAA,QAAQ,EAAE3B,CAAC,IAAI,KAAKoB,KAAL,CAAWrB,YAAX,CAAwBC,CAAxB,CANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATH,EAkBG;AAAM,MAAA,SAAS,EAAET,MAAM,CAACqC,YAAxB;AAAsC,MAAA,QAAQ,EAAE5B,CAAC,IAAI,KAAKK,QAAL,CAAcL,CAAd,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAQ,MAAA,SAAS,EAAET,MAAM,CAACsC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADH,EAEG;AAAO,MAAA,WAAW,EAAC,UAAnB;AAA8B,MAAA,IAAI,EAAC,WAAnC;AAA+C,MAAA,QAAQ,EAAE7B,CAAC,IAAI,KAAKD,YAAL,CAAkBC,CAAlB,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CADH,EAKG;AAAK,MAAA,SAAS,EAAET,MAAM,CAACuC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACInC,KAAK,CAACoC,GAAN,CAAU,CAACC,OAAD,EAAUC,GAAV,KAAkB;AAC1B,aACG;AAAK,QAAA,SAAS,EAAE1C,MAAM,CAAC2C,gBAAvB;AAAyC,QAAA,GAAG,EAAED,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,OAAO,CAACtC,SAAZ,CADH,EAGG;AAAK,QAAA,SAAS,EAAEH,MAAM,CAAC4C,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,GAAG,EAAC,YAAT;AAAsB,QAAA,SAAS,EAAE5C,MAAM,CAAC6C,GAAxC;AAA6C,QAAA,OAAO,EAAEpC,CAAC,IAAI,KAAKY,UAAL,CAAgBZ,CAAhB,EAAmBiC,GAAnB,CAA3D;AAAoF,QAAA,GAAG,EAAC,gCAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CAHH,CADH;AASF,KAVA,CADJ,CALH,CAlBH,CADQ,GAuCP,IAzCP,CADH;AA6CF;;AApG6B;;AAuGjC,eAAezC,QAAf","sourcesContent":["import React, { Fragment, Component } from \"react\";\nimport styles from \"./addItems.module.scss\";\nclass AddItems extends Component {\n   state = {\n      itemTitle: \"\",\n      items: [],\n      messageError: \"\",\n      checkbox: false,\n      clickOutside: false\n   };\n   handleChange = e => {\n      this.setState({ [e.target.name]: e.target.value });\n   };\n\n   componentDidUpdate(prevProps, prevState) {\n      const { shoppingLists } = this.props;\n      if (shoppingLists !== prevProps.shoppingLists) {\n         this.setState({ items: [], messageError: \"\" });\n      } else if (prevState.messageError !== this.state.messageError) {\n         this.setState({ messageError: \"\" });\n      }\n   }\n\n   addItems = e => {\n      e.preventDefault();\n      const { itemTitle, checkbox } = this.state;\n      const newElement = {\n         itemTitle,\n         checkbox,\n         person: \"\",\n         price: \"\",\n         month: \"\"\n      };\n\n      if (!itemTitle) {\n         this.setState({ messageError: \"You can not save empty information\" });\n         return;\n      } else {\n         this.setState(prevState => ({\n            items: [...prevState.items, newElement],\n            messageError: \"\"\n         }));\n      }\n   };\n\n   deleteItem = (_, ID) => {\n      const { items } = this.state;\n      this.setState({\n         items: items.filter((_, keyItem) => {\n            return ID !== keyItem;\n         })\n      });\n   };\n\n   render() {\n      const { showInputs, saveShoppingList } = this.props;\n      const { items, messageError } = this.state;\n      return (\n         <Fragment>\n            <p styles={styles.messageError}>{messageError}</p>\n            {showInputs ? (\n               <div className={styles.inputsContainer} ref={this.divRef}>\n                  <button\n                     className={styles.btnsaveShoppingList}\n                     onMouseDown={() => {\n                        return saveShoppingList(items);\n                     }}>\n                     Save list\n                  </button>\n\n                  <input\n                     className={styles.inputCreateLists}\n                     autoFocus={true}\n                     placeholder='Add group title'\n                     type='text'\n                     name='groupTitle'\n                     onChange={e => this.props.handleChange(e)}\n                  />\n\n                  <form className={styles.formAddItems} onSubmit={e => this.addItems(e)}>\n                     <div>\n                        <button className={styles.addBtn}>+</button>\n                        <input placeholder='Add item' name='itemTitle' onChange={e => this.handleChange(e)} />\n                     </div>\n                     <div className={styles.itemsList}>\n                        {items.map((element, key) => {\n                           return (\n                              <div className={styles.newItemContainer} key={key}>\n                                 <p>{element.itemTitle}</p>\n\n                                 <div className={styles.binDiv}>\n                                    <img alt='deleteItem' className={styles.bin} onClick={e => this.deleteItem(e, key)} src='https://svgshare.com/i/FSv.svg' />\n                                 </div>\n                              </div>\n                           );\n                        })}\n                     </div>\n                  </form>\n               </div>\n            ) : null}\n         </Fragment>\n      );\n   }\n}\n\nexport default AddItems;"]},"metadata":{},"sourceType":"module"}